name: Simple CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting dependencies
      run: pip install flake8
    
    - name: Run linting
      run: |
        # Controlla errori basilari di sintassi o problemi fatali
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Controlla anche PEP8 ma tratta come avvisi
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
  
  test:
    name: Run Tests
    needs: lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: pip install -r requirements.txt
    
    - name: Run simple test
      run: python test_simple.py
  
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test  # Esegue solo se i test passano
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t flask-app:latest .
        echo "✅ Docker image built successfully!"
    
    - name: Test Docker container
      run: |
        docker run -d -p 8080:8080 --name test-app flask-app:latest
        sleep 5
        docker logs test-app
        docker stop test-app
        docker rm test-app
        echo "✅ Docker container tested successfully!"
